name: test-deploy

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 레포 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # 2. JDK 17 설정 (DeptTest pom.xml에 맞춤)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Maven 캐시 (빌드 속도 개선)
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # 4. Maven 빌드
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 5. 빌드 결과물 확인 (JAR 파일 경로)
      - name: List target files
        run: ls -al target

      # 6. EC2에 배포 (SCP로 전송 & 재시작)
      - name: Deploy to AWS EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          KEY:  ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem target/*.jar $USER@$HOST:/home/$USER/app.jar
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST "nohup java -jar /home/$USER/app.jar > app.log 2>&1 &"
 
    
